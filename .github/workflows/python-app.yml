# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: master

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Sonarqube
      - uses: sonarsource/sonarqube-scan-action@master
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - uses: sonarsource/sonarqube-quality-gate-action@master
          timeout-minutes: 5
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade
          sudo apt install libgtk-4-dev libgirepository1.0-dev python-gi-dev desktop-file-utils libsoup2.4-dev meson
          pip install --upgrade pip
          pip install jinja2 markdown markupsafe pygments toml typogrify

      - name: Build libshumate
        run: |
          git clone https://gitlab.gnome.org/GNOME/libshumate.git
          cd libshumate
          meson setup build
          meson compile -C build
          sudo meson install -C build

      - name: Lint with isort & flake8
        run: |
          pip install pipenv
          pipenv install --dev
          pipenv run isort pygpxviewer
          pipenv run flake8 pygpxviewer --count --select=E9,F63,F7,F82 --show-source --statistics
          pipenv run flake8 pygpxviewer --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Build with meson
        run: |
          pipenv run meson setup build
          pipenv run meson compile -C build